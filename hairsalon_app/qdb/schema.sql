DROP TABLE SALON_REPORT;

DROP TABLE SALON_APPOINTMENT;

DROP TABLE SALON_SERVICE;

DROP TABLE SALON_USER;

DROP TABLE SALON_LOGS;

-- Create table for salon_professional
CREATE TABLE SALON_USER (
    USER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    IS_ACTIVE NUMBER(1) DEFAULT(0),
    STATUS NUMBER(1) DEFAULT(0), --flagged or warned.
    USER_TYPE VARCHAR2(15) DEFAULT ('client'), --client, professional, admin_user, admin_appoint, or admin_super.
    USERNAME VARCHAR2(30) NOT NULL UNIQUE,
    FULL_NAME VARCHAR2(100) DEFAULT NULL,
    EMAIL VARCHAR2(120) NOT NULL,
    USER_IMAGE VARCHAR2(30) DEFAULT('default.png'),
    PASSWORD_HASHED VARCHAR2(80) NOT NULL,
    PHONE_NUMBER VARCHAR2(80) DEFAULT NULL,
    ADDRESS VARCHAR2(100) DEFAULT NULL,
    AGE NUMBER(3) NOT NULL,
    PAY_RATE DECIMAL(5, 2) DEFAULT(NULL),
    SPECIALTY VARCHAR2(15) DEFAULT(NULL),
    CONSTRAINT USER_PK PRIMARY KEY (USER_ID)
);

INSERT INTO SALON_USER(user_type, username, full_name, email, user_image, PASSWORD_HASHED, address, age)
    VALUES('admin_super','nasr', 'ADMIN SUPER', 'admin@gmail.com', 
            'default.png', '$2b$12$xmVAPgK1vQCmkIKaH.jxfubAjtbP2pL/tDKVj2qAHfnAiz2MT.S/e',
            '5000 hair street', '100');

INSERT INTO SALON_USER(user_type, username, full_name, email, user_image, PASSWORD_HASHED, address, age)
    VALUES('admin_user', 'user_manager1','USER ADMIN', 'user.admin@gmail.com', 
    'default.png','$2b$12$r6RwJ.0rgA6JW2hkakUXq.H5XCrnGrZbhT5WGuGCmVu7qQhuosSZ.','5000 street', 100);

INSERT INTO SALON_USER(user_type, username, full_name, email, user_image, PASSWORD_HASHED, address, age)
    VALUES('admin_appoint', 'appoint_manager1', 'ADMIN APPOINT', 'admin.appoint@gmail.com','default.png',
    '$2b$12$f0L2Al6G73A1deBZ3U.tEeMctpFg420yJ3LwvtJU88jp71Ac5E/l2', '5000 street', 100);

INSERT INTO SALON_USER(user_type, username, full_name, 
                        email, user_image, PASSWORD_HASHED, 
                        address, age, pay_rate, SPECIALTY)
    VALUES('professional','Alice_pro','Alice McGraw','alice@gmail.com', 
            'default.png','$2b$12$4Vui8TU9SXAtLPxGQEhAbOjctpD9GZQujq2TKh01NQJS.NTQjNyKC',
            '5000 street', 100, 20, 'hairstylist');

INSERT INTO SALON_USER(user_type, username, full_name, 
                        email, user_image, PASSWORD_HASHED, 
                        address, age, pay_rate, SPECIALTY)
    VALUES('professional','Matthew_pro','Matthew Kravinski','matthew@gmail.com', 
            'default.png','$2b$12$B605rbykTT2t19PnxJKwT.OoCaS5hnd13ZtYcp/pBKZYhNsNadRK2',
            '5000 street', 100, 20, 'nail artist');

INSERT INTO SALON_USER(user_type, username, full_name, 
                        email, user_image, PASSWORD_HASHED, 
                        address, age, pay_rate, SPECIALTY)
    VALUES('professional','Cateline_pro','Cateline Boval','Cat@gmail.com', 
            'default.png','$2b$12$fIU.GsiMWv/ve79RmP7ut.8OF3CSuU0gC5Kfm1hVLuaiZNFO.d3HK',
            '5000 street', 100, 20, 'Makeup artist');
INSERT INTO SALON_USER(user_type, username, full_name, 
                        email, user_image, PASSWORD_HASHED, 
                        address, age, pay_rate, SPECIALTY)

    VALUES('professional','Alceste_pro','Alceste Muhirwa','alceste@gmail.com', 
            'default.png','$2b$12$Ab792kKV5yvpY978e2o9UutNWACyOUC4ZP5Si7EiIr.f/n5oMPXFO',
            '5000 street', 100, 20, 'hairstylist');

INSERT INTO SALON_USER(user_type, username, full_name, email, user_image, PASSWORD_HASHED, address, age)
    VALUES('client','RidaClient', 'Ridaa', 'Rida@gmail.com', 
            'default.png', '$2b$12$jfRAVE3GS8amogsWrLFaFOWZxCXaLvR9sk89FPqxxehZ59Ed8bGm2',
            '5000 hair street', '100');
            
INSERT INTO SALON_USER(user_type, username, full_name, email, user_image, PASSWORD_HASHED, address, age)
    VALUES('client','AmyClient', 'Amyy', 'Amy@gmail.com', 
            'default.png', '$2b$12$hrPKVfF44YbNClCM.2oNwurRw5SwBWwJmRnhCSeHrdyW5mJkg.kSG',
            '5000 hair street', '100');

INSERT INTO SALON_USER(user_type, username, full_name, email, user_image, PASSWORD_HASHED, address, age)
    VALUES('client','JotClient', 'Jottie', 'Jot@gmail.com', 
            'default.png', '$2b$12$CjrAQtyD4yhqzBfRE6Aaue/k7HQVKp0b6SDdK3J4Dx1zV2AqLxkiu',
            '5000 hair street', '100');

-- Create table for salon_service
CREATE TABLE SALON_SERVICE (
    SERVICE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    SERVICE_NAME VARCHAR2(35) NOT NULL,
    SERVICE_DURATION NUMBER(2) NOT NULL,
    SERVICE_PRICE NUMBER(5, 2) NOT NULL,
    SERVICE_MATERIALS VARCHAR2(35) NOT NULL,
    CONSTRAINT SERVICE_PK PRIMARY KEY (SERVICE_ID)
);

INSERT INTO SALON_SERVICE(
    SERVICE_NAME,
    SERVICE_DURATION,
    SERVICE_PRICE,
    SERVICE_MATERIALS
) VALUES(
    'Trimming',
    30,
    50,
    'Scissors, comb'
);

INSERT INTO SALON_SERVICE(SERVICE_NAME, SERVICE_DURATION, SERVICE_PRICE, SERVICE_MATERIALS)
    VALUES('Women Haircut', 60, 30, 'Scissors, comb, brush');
INSERT INTO SALON_SERVICE(SERVICE_NAME, SERVICE_DURATION, SERVICE_PRICE, SERVICE_MATERIALS)
    VALUES('Men haircut', 20, 10, 'razor, buzzer');
INSERT INTO SALON_SERVICE(SERVICE_NAME, SERVICE_DURATION, SERVICE_PRICE, SERVICE_MATERIALS)
    VALUES('Dye', 80, 60, 'Hair dye, brush, timer');
INSERT INTO SALON_SERVICE(SERVICE_NAME, SERVICE_DURATION, SERVICE_PRICE, SERVICE_MATERIALS)
    VALUES('Clean shave', 20, 25, 'Shaving cream, razor');
INSERT INTO SALON_SERVICE(SERVICE_NAME, SERVICE_DURATION, SERVICE_PRICE, SERVICE_MATERIALS)
    VALUES('Full treatment', 60, 80, 'Special oil');

-- Create table for salon_appointment
CREATE TABLE SALON_APPOINTMENT (
    APPOINTMENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    STATUS VARCHAR2(10) DEFAULT('pending'),
    APPROVED NUMBER(1) DEFAULT(1),
    DATE_APPOINTMENT DATE DEFAULT SYSDATE,
    CLIENT_ID NUMBER NOT NULL,
    PROFESSIONAL_ID NUMBER NOT NULL,
    SERVICE_ID NUMBER NOT NULL,
    SLOT VARCHAR2(10) DEFAULT ('9-10'),
    VENUE VARCHAR2(20) DEFAULT ('cmn_room'),
    CLIENT_NAME VARCHAR2(100) NOT NULL,
    PROFESSIONAL_NAME VARCHAR2(100) NOT NULL,
    SERVICE_NAME VARCHAR2(100) NOT NULL,

    CONSTRAINT APPOINTMENT_PK PRIMARY KEY (APPOINTMENT_ID),
    CONSTRAINT APPOINTMENT_CLIENTFK FOREIGN KEY (CLIENT_ID) REFERENCES SALON_USER(USER_ID) ON DELETE CASCADE,
    CONSTRAINT APPOINTMENT_PROFESSIONALFK FOREIGN KEY (PROFESSIONAL_ID) REFERENCES SALON_USER(USER_ID) ON DELETE CASCADE,
    CONSTRAINT APPOINTMENT_SEVICEFK FOREIGN KEY (SERVICE_ID) REFERENCES SALON_SERVICE(SERVICE_ID) ON DELETE CASCADE
);

INSERT INTO SALON_APPOINTMENT (STATUS, APPROVED, DATE_APPOINTMENT, CLIENT_ID, PROFESSIONAL_ID, SERVICE_ID, SLOT, VENUE, CLIENT_NAME, PROFESSIONAL_NAME, SERVICE_NAME)
VALUES ('completed', 1, SYSDATE, 8, 4, 1, '10-11', '1', 'Ridaa', 'Alice McGraw', 'Trimming');

INSERT INTO SALON_APPOINTMENT (STATUS, APPROVED, DATE_APPOINTMENT, CLIENT_ID, PROFESSIONAL_ID, SERVICE_ID, SLOT, VENUE, CLIENT_NAME, PROFESSIONAL_NAME, SERVICE_NAME)
VALUES ('approved', 1, TO_DATE('2024-05-30','YYYY-MM-DD'), 9, 5, 2, '16-17', '1', 'Amyy', 'Matthew Kravinski', 'Women Haircut');

INSERT INTO SALON_APPOINTMENT (STATUS, APPROVED, DATE_APPOINTMENT, CLIENT_ID, PROFESSIONAL_ID, SERVICE_ID, SLOT, VENUE, CLIENT_NAME, PROFESSIONAL_NAME, SERVICE_NAME)
VALUES ('pending', 1, TO_DATE('2024-06-01','YYYY-MM-DD'), 10, 6, 3, '11-12', '2', 'Jottie', 'Cateline Boval', 'Men haircut');

INSERT INTO SALON_APPOINTMENT (STATUS, APPROVED, DATE_APPOINTMENT, CLIENT_ID, PROFESSIONAL_ID, SERVICE_ID, SLOT, VENUE, CLIENT_NAME, PROFESSIONAL_NAME, SERVICE_NAME)
VALUES ('cancelled', 1, TO_DATE('2024-05-20', 'YYYY-MM-DD'), 8, 7, 4, '14-15', '3', 'Ridaa', 'Alceste Muhirwa', 'Dye');

INSERT INTO SALON_APPOINTMENT (STATUS, APPROVED, DATE_APPOINTMENT, CLIENT_ID, PROFESSIONAL_ID, SERVICE_ID, SLOT, VENUE, CLIENT_NAME, PROFESSIONAL_NAME, SERVICE_NAME)
VALUES ('pending', 1, TO_DATE('2024-06-05', 'YYYY-MM-DD'), 9, 4, 5, '15-16', '3', 'Amyy', 'Alice McGraw', 'Clean shave');


-- Create table for salon_report
CREATE TABLE SALON_REPORT(
    REPORT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    USER_ID NUMBER NOT NULL,
    APPOINTMENT_ID NUMBER NOT NULL,
    DATE_REPORT DATE DEFAULT SYSDATE,
    TITLE VARCHAR2(50) NOT NULL,
    CLIENT_REPORT VARCHAR2(500),
    PROFESSIONAL_REPORT VARCHAR2(500),
    CONSTRAINT REPORT_PK PRIMARY KEY (REPORT_ID),
    CONSTRAINT REPORT_FK FOREIGN KEY (APPOINTMENT_ID) REFERENCES SALON_APPOINTMENT(APPOINTMENT_ID) ON DELETE CASCADE,
    CONSTRAINT REPORT_USER_FK FOREIGN KEY (USER_ID) REFERENCES SALON_USER(USER_ID) ON DELETE CASCADE
);

CREATE TABLE SALON_LOGS
(
    action VARCHAR2(15) NOT NULL,
    table_name VARCHAR2(30) NOT NULL,
    user_id NUMBER,
    time_log TIMESTAMP
);

CREATE OR REPLACE TRIGGER trigger_appointment_insert
  AFTER INSERT ON SALON_APPOINTMENT
  FOR EACH ROW
BEGIN
    INSERT INTO SALON_LOGS
      VALUES( 'INSERT', 'SALON_APPOINTMENT', :NEW.client_id, SYSTIMESTAMP);
 END;
 
 /
 
 
CREATE OR REPLACE TRIGGER trigger_appointment_update
  AFTER UPDATE ON SALON_APPOINTMENT
  FOR EACH ROW
BEGIN
    INSERT INTO SALON_LOGS
      VALUES( 'UPDATE', 'SALON_APPOINTMENT', :NEW.client_id, SYSTIMESTAMP);
 END;
 
 /

CREATE OR REPLACE TRIGGER trigger_appointment_delete
  AFTER DELETE ON SALON_APPOINTMENT
  FOR EACH ROW
BEGIN
    INSERT INTO SALON_LOGS
      VALUES('DELETE', 'SALON_APPOINTMENT', :OLD.client_id, SYSTIMESTAMP);
END;

/
 
CREATE OR REPLACE TRIGGER trigger_user_insert
  AFTER INSERT ON SALON_USER
  FOR EACH ROW
BEGIN
    INSERT INTO SALON_LOGS
      VALUES( 'INSERT', 'SALON_USER', :NEW.user_id, SYSTIMESTAMP);
 END;
 
 /
 

CREATE OR REPLACE TRIGGER trigger_user_update
  AFTER UPDATE ON SALON_USER
  FOR EACH ROW
BEGIN
    INSERT INTO SALON_LOGS
      VALUES( 'UPDATE', 'SALON_USER', :NEW.user_id, SYSTIMESTAMP);
 END;
 
 /

CREATE OR REPLACE TRIGGER trigger_user_delete
  AFTER DELETE ON SALON_USER
  FOR EACH ROW
BEGIN
    INSERT INTO SALON_LOGS
      VALUES('DELETE', 'SALON_USER', :OLD.user_id, SYSTIMESTAMP);
END;

/
 
 CREATE OR REPLACE TRIGGER trigger_report_insert
  AFTER INSERT ON SALON_REPORT
  FOR EACH ROW
BEGIN
    INSERT INTO SALON_LOGS
      VALUES( 'INSERT', 'SALON_REPORT', :NEW.user_id, SYSTIMESTAMP);
 END;
 
 /
 
CREATE OR REPLACE TRIGGER trigger_report_update
  AFTER UPDATE ON SALON_REPORT
  FOR EACH ROW
BEGIN
    INSERT INTO SALON_LOGS
      VALUES( 'UPDATE', 'SALON_REPORT', :NEW.user_id, SYSTIMESTAMP);
 END;

/

CREATE OR REPLACE TRIGGER trigger_report_delete
  AFTER DELETE ON SALON_REPORT
  FOR EACH ROW
BEGIN
    INSERT INTO SALON_LOGS
      VALUES('DELETE', 'SALON_REPORT', :OLD.user_id, SYSTIMESTAMP);
END;

/

COMMIT;